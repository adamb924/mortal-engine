<?xml version="1.0" encoding="UTF-8"?>
<tests
    xmlns="https://www.adambaker.org/mortal-engine/tests"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="https://www.adambaker.org/mortal-engine/tests tests.xsd">
    <schema label="Minimal Example">
        <morphology-file>00-Minimal.xml</morphology-file>
        <recognition-test>
            <input lang="wk-LA">bil</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">ata</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <message>Any writing system is accepted:</message>
        <recognition-test>
            <input lang="wk-AR">آی</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <message>Words not on the list are rejected:</message>
        <recognition-test>
            <input lang="wk-LA">banana</input>
            <should-be-accepted>no</should-be-accepted>
        </recognition-test>
    </schema>
    <schema label="Filtering Example">
        <morphology-file>01-Filtered.xml</morphology-file>
        <message>Nouns are accepted, but not verbs:</message>
        <recognition-test>
            <input lang="wk-LA">ata</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">bil</input>
            <should-be-accepted>no</should-be-accepted>
        </recognition-test>
    </schema>
    <schema label="Affix Example">
        <morphology-file>02-Affixes.xml</morphology-file>
        <message>Admittedly, obligatory affixes are kind of silly:</message>
        <recognition-test>
            <input lang="wk-LA">ata</input>
            <should-be-accepted>no</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">atalar</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
    </schema>
    <schema label="Missing Form Example">
        <morphology-file>02a-Missing-Form.xml</morphology-file>
        <recognition-test>
            <input lang="wk-LA">ata</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-AR">آتا</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">atalar</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-AR">آتالار</input>
            <should-be-accepted>no</should-be-accepted>
        </recognition-test>
    </schema>
    <schema label="Missing Form Example">
        <morphology-file>02b-Missing-Form-2.xml</morphology-file>
        <recognition-test>
            <input lang="wk-LA">ata</input>
            <should-be-accepted>no</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-AR">آتا</input>
            <should-be-accepted>no</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">atalar</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">atalary</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">atay</input>
            <should-be-accepted>no</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-AR">آتاش</input>
            <should-be-accepted>no</should-be-accepted>
        </recognition-test>
    </schema>
    <schema label="Optional Affix Example">
        <morphology-file>03-Optional-Affixes.xml</morphology-file>
        <message>Most affixes are optional:</message>
        <recognition-test>
            <input lang="wk-LA">ata</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">atalar</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
    </schema>
    <schema label="Tag-Based Allomorphy Example">
        <morphology-file>04-Tag-Allomorphy.xml</morphology-file>
        <recognition-test>
            <input lang="wk-LA">ata</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">atalar</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">ataler</input>
            <should-be-accepted>no</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">gözler</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">gözlar</input>
            <should-be-accepted>no</should-be-accepted>
        </recognition-test>
    </schema>
    <schema label="Mutually Exclusive Morphemes Example">
        <morphology-file>05-Mutually-Exclusive.xml</morphology-file>
        <recognition-test>
            <input lang="wk-LA">ata</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">atalar</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">atalary</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">atalarym</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">atalarymy</input>
            <should-be-accepted>no</should-be-accepted>
        </recognition-test>
    </schema>
    <schema label="Mutually Exclusive Morphemes Example 2">
        <morphology-file>06-Mutually-Exclusive-2.xml</morphology-file>
        <recognition-test>
            <input lang="wk-LA">ata</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">atalar</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">atalary</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">atalarym</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">atalarymy</input>
            <should-be-accepted>no</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">göz</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">gözler</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">gözleri</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">gözlerim</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">gözlarim</input>
            <should-be-accepted>no</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">gözlerym</input>
            <should-be-accepted>no</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">gözlerimi</input>
            <should-be-accepted>no</should-be-accepted>
        </recognition-test>
    </schema>
    <schema label="Forks">
        <morphology-file>07-Forks.xml</morphology-file>
        <recognition-test>
            <input lang="wk-LA">bil_PRESENT_present.1s</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">bil_PRESENT_present.2s</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">bil_FUTURE_present.1s</input>
            <should-be-accepted>no</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">bil_FUTURE_present.2s</input>
            <should-be-accepted>no</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">bil_PRESENT_future.1s</input>
            <should-be-accepted>no</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">bil_PRESENT_future.2s</input>
            <should-be-accepted>no</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">bil_FUTURE_future.1s</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">bil_FUTURE_future.2s</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
    </schema>
    <schema label="Forks">
        <morphology-file>08-Sequences.xml</morphology-file>
        <recognition-test>
            <input lang="wk-LA">bil</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">bilOneTwo</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">bilOne</input>
            <should-be-accepted>no</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">bilTwo</input>
            <should-be-accepted>no</should-be-accepted>
        </recognition-test>
    </schema>
    <schema label="Multiple Models">
        <morphology-file>09-Multiple-Models.xml</morphology-file>
        <recognition-test>
            <input lang="wk-LA">bilTense</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">bilCase</input>
            <should-be-accepted>no</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">ataTense</input>
            <should-be-accepted>no</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">ataCase</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
    </schema>
    <schema label="Jumps">
        <morphology-file>10-Jumps.xml</morphology-file>
        <message>Case suffixes can go on nouns</message>
        <recognition-test>
            <input lang="wk-LA">don</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">donCase</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <message>Case suffixes don't go on verbs</message>
        <recognition-test>
            <input lang="wk-LA">bilCase</input>
            <should-be-accepted>no</should-be-accepted>
        </recognition-test>
        <message>Infinitive suffixation, with subsequent case affixation</message>
        <recognition-test>
            <input lang="wk-LA">bilinf</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">bilinfCase</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <message>(Obviously) Infinitive suffixes don't go on nouns</message>
        <recognition-test>
            <input lang="wk-LA">doninf</input>
            <should-be-accepted>no</should-be-accepted>
        </recognition-test>
    </schema>
    <schema label="Jumps 2">
        <morphology-file>11-Jumps-2.xml</morphology-file>
        <message>Case suffixes go on nouns</message>
        <recognition-test>
            <input lang="wk-LA">don</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <recognition-test>
            <input lang="wk-LA">donCase</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <message>Case suffixes don't go on verbs</message>
        <recognition-test>
            <input lang="wk-LA">bilCase</input>
            <should-be-accepted>no</should-be-accepted>
        </recognition-test>
        <message>Infinitive suffixation, without a case suffix, is no longer possible</message>
        <recognition-test debug="true">
            <input lang="wk-LA">bilinf</input>
            <should-be-accepted>no</should-be-accepted>
        </recognition-test>
        <message>Infinitive suffixation, with subsequent case affixation</message>
        <recognition-test>
            <input lang="wk-LA">bilinfCase</input>
            <should-be-accepted>yes</should-be-accepted>
        </recognition-test>
        <message>(Obviously) Infinitive suffixes don't go on nouns</message>
        <recognition-test>
            <input lang="wk-LA">doninf</input>
            <should-be-accepted>no</should-be-accepted>
        </recognition-test>
    </schema>
</tests>