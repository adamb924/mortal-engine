#ifndef GENERATIONTEST_H
#define GENERATIONTEST_H

#include "abstracttest.h"

class GenerationTest : public AbstractTest
{
public:
    GenerationTest(const Morphology *morphology);

    //! \brief Returns true if the parsing generated by the model are identical to the target outputs; otherwise returns false.
    bool succeeds() const override;

    //! \brief Returns a summary of results of the test.
    QString message() const override;

    //! \brief Runs the test.
    void runTest() override;

    //! \brief Add an output that the model must produce.
    void addTargetOutput( Form output );

    void setLexicalStemId(const qlonglong &lexicalStemId);

    void setMorphologicalString(const QString &morphologicalString);

private:
    WritingSystem mOutputWritingSystem;
    QSet<Form> mActualOutputs, mTargetOutputs;
    qlonglong mLexicalStemId;
    QString mMorphologicalString;
};

#endif // GENERATIONTEST_H
